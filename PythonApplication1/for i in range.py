
#for i in range(100):
#    print(i)

N = 6
a = [0] * N
 
for i in range(N):
    a[i] = i ** 2
 
print(a)

#useless(s)

#Николай задумался о поиске «бесполезного» числа на основании списка. 
#Суть оного в следующем: он берет произвольный список чисел, находит самое большое из них, а затем делит его на длину списка. Студент пока не придумал, где может пригодиться подобное значение, но ищет у вас помощи в реализации такой функции useless(s).

def useless(lst):
    return max(lst) / len(lst)

# Тесты
print(useless([1, 5, 77]))
print(useless([19, 8.3, -4, 11, 0, 5]))
print(useless([-33, -0.05, -4.18, 11.2, 13.12, 55, 7.1]))



#all_eq(lst)

#На входе имеем список строк разной длины. 
#Необходимо написать функцию all_eq(lst), которая вернет новый список из строк одинаковой длины. 
#Длину итоговой строки определяем исходя из самой большой из них. 
#Если конкретная строка короче самой длинной, дополнить ее нижними подчеркиваниями с правого края до требуемого количества символов.Расположение элементов начального списка не менять.

def all_eq(lst):
    max_item = max(lst, key=lambda x: len(x))
max_len = len(max_item)
return[item.ljust(max_len, '_') for item in lst]


# Тесты
print(all_eq(['крот', 'белка', 'выхухоль']))
print(all_eq(['a', 'aa', 'aaa', 'aaaa', 'aaaaa']))
print(all_eq(['qweasdqweas', 'q', 'rteww', 'ewqqqqq']))
#Результат выполнения
['крот____', 'белка___', 'выхухоль']
['a____', 'aa___', 'aaa__', 'aaaa_', 'aaaaa']
['qweasdqweas', 'q__________', 'rteww______', 'ewqqqqq____']